{"remainingRequest":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/src/views/curso/Tema1.vue?vue&type=template&id=5324fc2c&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/src/views/curso/Tema1.vue","mtime":1759207535551},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}