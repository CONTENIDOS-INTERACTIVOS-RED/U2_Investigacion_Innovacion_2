{"remainingRequest":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/src/views/Introduccion.vue?vue&type=template&id=9effb166&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/src/views/Introduccion.vue","mtime":1759207535551},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Innovacion_2/U2_Investigacion_Innovacion_2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInSW50cm9kdWNjacOzbiciKQogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNS5vdmVyZmxvdy1oaWRkZW4KICAgIAogICAgLy8gQmxvcXVlOiBpbWFnZW4tdGV4dG8tY29sb3IgNDo4CiAgICAucm93Lm1iLTUKICAgICAgLmNvbC1sZy00CiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby9pbnRyby8xLnBuZyIsIGRhdGEtYW9zPSJ6b29tLWluIikKICAgICAgLmNvbC1sZy04CiAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikubWItNSBFbiBlbCBkZXNhcnJvbGxvIMOhZ2lsIGRlIHNvZnR3YXJlLCBsYSBjb3JyZWN0YSBnZXN0acOzbiBkZSBlcXVpcG9zIHJlcHJlc2VudGEgdW4gZmFjdG9yIGRlY2lzaXZvIHBhcmEgYWxjYW56YXIgcHJvZHVjdG9zIGRlIGNhbGlkYWQgZW4gdGllbXBvcyBjb21wZXRpdGl2b3MuIExhIG1ldG9kb2xvZ8OtYSBTY3J1bSwgdW5hIGRlIGxhcyBtw6FzIGRpZnVuZGlkYXMgZGVudHJvIGRlbCBlbmZvcXVlIMOhZ2lsLCBwcm9wb3JjaW9uYSB1biBtYXJjbyBlc3RydWN0dXJhZG8gcXVlIHByb211ZXZlIGxhIGNvbGFib3JhY2nDs24sIGxhIG9yZ2FuaXphY2nDs24gZWZlY3RpdmEgZGVsIHRyYWJham8geSBsYSBlbnRyZWdhIGNvbnRpbnVhIGRlIHZhbG9yLiBFbiBlc3RhIHVuaWRhZCwgc2UgcHJvZnVuZGl6YSBlbiBsb3MgY29tcG9uZW50ZXMgY2xhdmVzIGRlIFNjcnVtIHJlbGFjaW9uYWRvcyBjb24gbGEgZ2VzdGnDs24gZGUgZXF1aXBvcywgbG9zIHJvbGVzIGVzZW5jaWFsZXMgcXVlIGxvIGNvbXBvbmVuLCBsb3MgY2ljbG9zIGl0ZXJhdGl2b3MgZGVub21pbmFkb3Mgc3ByaW50cyB5IGxhcyBoZXJyYW1pZW50YXMgZGlnaXRhbGVzIHF1ZSBmYWNpbGl0YW4gc3UgaW1wbGVtZW50YWNpw7NuLgoKICAgICAgICAuYmctY29sb3ItMS5wLTQoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAgICAgICBwLm1iLTAgQWwgZmluYWxpemFyIGVzdGEgdW5pZGFkLCBzZSBlc3BlcmEgcXVlIHNlIGNvbXByZW5kYW4geSBhcGxpcXVlbiBsb3MgZnVuZGFtZW50b3Mgb3JnYW5pemF0aXZvcyBkZSBTY3J1bSwgc2UgaWRlbnRpZmlxdWVuIGNvbiBjbGFyaWRhZCBsb3Mgcm9sZXMgeSByZXNwb25zYWJpbGlkYWRlcyBkZWwgUHJvZHVjdCBPd25lciwgZWwgU2NydW0gTWFzdGVyIHkgZWwgZXF1aXBvIGRlIGRlc2Fycm9sbG8sIHNlIHJlY29ub3pjYSBsYSBpbXBvcnRhbmNpYSBkZWwgY2ljbG8gZGUgU3ByaW50IGVuIGxhIHBsYW5pZmljYWNpw7NuIHkgZWplY3VjacOzbiBkZWwgdHJhYmFqbywgeSBzZSB2YWxvcmVuIGhlcnJhbWllbnRhcyBjb21vIEpJUkEgeSBUcmVsbG8sIHBhcmEgZWwgc2VndWltaWVudG8gZGUgYWN0aXZpZGFkZXMgZW4gZXF1aXBvcyDDoWdpbGVzLgoKICAgIC8vIEJsb3F1ZTogaWNvbm9ibG9xdWUtdGV4dG8taW1hZ2VuCiAgICAucm93Lm1iLTUKICAgICAgLmNvbC1sZy04CiAgICAgICAgLmJnLWNvbG9yLTQucC00Lm1iLTUoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLXN0YXJ0CiAgICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL2ludHJvLzIuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICAgIHAubWItMCBFc3RlIGNvbm9jaW1pZW50byByZXN1bHRhIGZ1bmRhbWVudGFsIHBhcmEgZGVzZW52b2x2ZXJzZSBlbiBlbnRvcm5vcyBsYWJvcmFsZXMgbW9kZXJub3MsIGRvbmRlIHNlIHByaXZpbGVnaWEgbGEgYWRhcHRhYmlsaWRhZCwgbGEgY29sYWJvcmFjacOzbiB5IGxhIGVudHJlZ2EgaW5jcmVtZW50YWwgZGUgcHJvZHVjdG9zLiBEb21pbmFyIGVzdG9zIGNvbmNlcHRvcyBwZXJtaXRlIHVuYSBwYXJ0aWNpcGFjacOzbiBhY3RpdmEgeSBlc3RyYXTDqWdpY2EgZW4gZXF1aXBvcyBkZSBkZXNhcnJvbGxvLCBjb250cmlidXllbmRvIGRlIGZvcm1hIHNpZ25pZmljYXRpdmEsIGEgbGEgZWZpY2llbmNpYSBkZWwgcHJvY2VzbyB5IGEgbGEgc2F0aXNmYWNjacOzbiBkZWwgY2xpZW50ZS4gQ29tbyBlamVtcGxvLCBtdWNoYXMgZW1wcmVzYXMgdGVjbm9sw7NnaWNhcyBlbXBsZWFuIFNjcnVtIHBhcmEgaXRlcmFyIHLDoXBpZGFtZW50ZSBzdXMgcHJvZHVjdG9zIGRpZ2l0YWxlcywgYWp1c3TDoW5kb3NlIGEgbG9zIGNhbWJpb3MgZGVsIG1lcmNhZG8geSBhIGxhcyBuZWNlc2lkYWRlcyBkZWwgdXN1YXJpby4KCiAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikgI1tzdHJvbmcgTGEgdW5pZGFkIHNlIGVzdHJ1Y3R1cmEgZW4gdHJlcyB0ZW1hcyBwcmluY2lwYWxlczpdCgogICAgICAuY29sLWxnLTQKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL2ludHJvLzMucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQoKICAgIC8vIEJsb3F1ZTogaWNvbm9zLWNvbG9yICgzIGNvbHVtbmFzKQogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLXN0cmV0Y2gubWItNQogICAgICAuY29sLWxnLTQKICAgICAgICAuYmctY29sb3ItMy5wLTQoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLmgtMTAwLnRleHQtd2hpdGUKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL2ludHJvLzQuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICAgIGg1Lm1iLTIgVGVtYSAxCiAgICAgICAgICAgICAgcC5tYi0wIExvcyByb2xlcyBlbiBTY3J1bS4KCiAgICAgIC5jb2wtbGctNAogICAgICAgIC5iZy1jb2xvci0zLnAtNChkYXRhLWFvcz0iZmFkZS1sZWZ0IikuaC0xMDAudGV4dC13aGl0ZQogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgICAgLmNvbC1sZy1hdXRvCiAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vaW50cm8vNS5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgICAgaDUubWItMiBUZW1hIDIKICAgICAgICAgICAgICBwLm1iLTAgTG9zIGNpY2xvcyBkZSBTcHJpbnQuCgogICAgICAuY29sLWxnLTQKICAgICAgICAuYmctY29sb3ItMy5wLTQoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLmgtMTAwLnRleHQtd2hpdGUKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyCiAgICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL2ludHJvLzYuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICAgIGg1Lm1iLTIgVGVtYSAzCiAgICAgICAgICAgICAgcC5tYi0wIExhcyBoZXJyYW1pZW50YXMgZGUgc2VndWltaWVudG8uCgogICAgLy8gQmxvcXVlOiBiZy1mdWxsLWNvbG9yCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci0xCiAgICAgIC5weC00LnB4LW1kLTUucHktNAogICAgICAgIHAubWItMyBDYWRhIHRlbWEgc2UgZGVzZ2xvc2EgZW4gc3VidGVtYXMgcXVlIHBlcm1pdGlyw6FuIHVuIGFib3JkYWplIHByb2dyZXNpdm8geSBwcsOhY3RpY28gZGVsIGNvbnRlbmlkby4gU2UgaW52aXRhIGEgaW50ZXJhY3R1YXIgYWN0aXZhbWVudGUgY29uIGxvcyByZWN1cnNvcyBkaXNwb25pYmxlcywgcGFydGljaXBhciBlbiBsYXMgYWN0aXZpZGFkZXMgcHJvcHVlc3RhcyB5IHJlZmxleGlvbmFyIHNvYnJlIGxhIGFwbGljYWNpw7NuIGRlIGVzdG9zIGNvbmNlcHRvcyBlbiBjb250ZXh0b3MgcmVhbGVzLgogICAgICAgIAogICAgICAgIHAubWItMCBTZSByZWNvbWllbmRhIHJldmlzYXIgcHJldmlhbWVudGUsIGxvcyBmdW5kYW1lbnRvcyBnZW5lcmFsZXMgZGUgbWV0b2RvbG9nw61hcyDDoWdpbGVzIGFib3JkYWRvcyBlbiBsYSB1bmlkYWQgYW50ZXJpb3IsIGNvbiBlbCBmaW4gZGUgY29udGV4dHVhbGl6YXIgbWVqb3IgbG9zIGNvbnRlbmlkb3MgeSBhcHJvdmVjaGFyIGFsIG3DoXhpbW8gbGFzIGFjdGl2aWRhZGVzIGZvcm1hdGl2YXMgZGUgZXN0YSBzZWNjacOzbi4KICAgIAoK"},null]}